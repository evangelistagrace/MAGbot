<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.category="Admission" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ueabf="clr-namespace:UiPath.Excel.Activities.Business.Filter;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="category" Type="InArgument(x:String)" />
    <x:Property Name="assigned_worker_id" Type="OutArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>1092,4902.66666666667</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Excel.Activities.Business.Filter</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="1102,4838" sap2010:WorkflowViewState.IdRef="Sequence_9">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="1060,4746" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
      <ueab:ExcelProcessScopeX.Body>
        <ActivityAction x:TypeArguments="ui:IExcelProcess">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1026,4660" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="984,4568" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="E:\\codes\\MAGbot\\task_assignment_matrix.xlsx">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="task_assignment_matrix" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="950,4291.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_7">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="sd:DataTable" Name="dt" />
                      <Variable x:TypeArguments="x:Int32" Name="first_row_index" />
                      <Variable x:TypeArguments="x:Int32" Name="last_row_index" />
                      <Variable x:TypeArguments="x:String" Name="min_open_tickets" />
                      <Variable x:TypeArguments="x:String" Name="min_completed_tickets" />
                      <Variable x:TypeArguments="x:String" Name="available_worker" />
                      <Variable x:TypeArguments="x:String" Name="assigned_worker_name" />
                      <Variable x:TypeArguments="x:String" Name="availability_rows" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:DeleteSheetX DisplayName="Delete Sheet" sap:VirtualizedContainerService.HintSize="908,90.6666666666667" sap2010:WorkflowViewState.IdRef="DeleteSheetX_1">
                      <ueab:DeleteSheetX.Sheet>
                        <InArgument x:TypeArguments="ue:ISheetRef">
                          <mca:CSharpValue x:TypeArguments="ue:ISheetRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">task_assignment_matrix.Sheet["Filtered"]</mca:CSharpValue>
                        </InArgument>
                      </ueab:DeleteSheetX.Sheet>
                    </ueab:DeleteSheetX>
                    <ueab:AppendRangeX StartingColumnName="{x:Null}" DestinationHasHeaders="False" DisplayName="Append Range" HasHeaders="False" sap:VirtualizedContainerService.HintSize="908,216" sap2010:WorkflowViewState.IdRef="AppendRangeX_1" PasteOptions="All" Transpose="False">
                      <ueab:AppendRangeX.DestinationRange>
                        <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                          <mca:CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">task_assignment_matrix.Sheet["Filtered"]</mca:CSharpValue>
                        </InArgument>
                      </ueab:AppendRangeX.DestinationRange>
                      <ueab:AppendRangeX.SourceRange>
                        <InArgument x:TypeArguments="ue:IReadRangeRef">
                          <mca:CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">task_assignment_matrix.Sheet["Main"]</mca:CSharpValue>
                        </InArgument>
                      </ueab:AppendRangeX.SourceRange>
                    </ueab:AppendRangeX>
                    <ueab:FilterX ClearFilter="False" ColumnName="Role" DisplayName="Filter by category" HasHeaders="True" sap:VirtualizedContainerService.HintSize="908,170.666666666667" sap2010:WorkflowViewState.IdRef="FilterX_1">
                      <ueab:FilterX.FilterArgument>
                        <ueabf:FilterArgument Mode="Basic">
                          <ueabf:FilterArgument.AdvancedFiltersArgument>
                            <ueabf:AdvancedFilterArgument LogicalOperator="And">
                              <ueabf:AdvancedFilterArgument.Condition1>
                                <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                              </ueabf:AdvancedFilterArgument.Condition1>
                              <ueabf:AdvancedFilterArgument.Condition2>
                                <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                              </ueabf:AdvancedFilterArgument.Condition2>
                            </ueabf:AdvancedFilterArgument>
                          </ueabf:FilterArgument.AdvancedFiltersArgument>
                          <ueabf:FilterArgument.BasicFiltersArgument>
                            <ueabf:BasicFilterArgument>
                              <ueabf:BasicFilterArgument.BasicFilters>
                                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                  <InArgument x:TypeArguments="x:String">
                                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">category</mca:CSharpValue>
                                  </InArgument>
                                </scg:List>
                              </ueabf:BasicFilterArgument.BasicFilters>
                            </ueabf:BasicFilterArgument>
                          </ueabf:FilterArgument.BasicFiltersArgument>
                        </ueabf:FilterArgument>
                      </ueab:FilterX.FilterArgument>
                      <ueab:FilterX.Range>
                        <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                          <mca:CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">task_assignment_matrix.Sheet["Filtered"]</mca:CSharpValue>
                        </InArgument>
                      </ueab:FilterX.Range>
                    </ueab:FilterX>
                    <ueab:FilterX ClearFilter="False" ColumnName="Availability" DisplayName="Filter by availability" HasHeaders="True" sap:VirtualizedContainerService.HintSize="908,170.666666666667" sap2010:WorkflowViewState.IdRef="FilterX_2">
                      <ueab:FilterX.FilterArgument>
                        <ueabf:FilterArgument Mode="Basic">
                          <ueabf:FilterArgument.AdvancedFiltersArgument>
                            <ueabf:AdvancedFilterArgument LogicalOperator="And">
                              <ueabf:AdvancedFilterArgument.Condition1>
                                <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                              </ueabf:AdvancedFilterArgument.Condition1>
                              <ueabf:AdvancedFilterArgument.Condition2>
                                <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                              </ueabf:AdvancedFilterArgument.Condition2>
                            </ueabf:AdvancedFilterArgument>
                          </ueabf:FilterArgument.AdvancedFiltersArgument>
                          <ueabf:FilterArgument.BasicFiltersArgument>
                            <ueabf:BasicFilterArgument>
                              <ueabf:BasicFilterArgument.BasicFilters>
                                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                  <InArgument x:TypeArguments="x:String">1</InArgument>
                                </scg:List>
                              </ueabf:BasicFilterArgument.BasicFilters>
                            </ueabf:BasicFilterArgument>
                          </ueabf:FilterArgument.BasicFiltersArgument>
                        </ueabf:FilterArgument>
                      </ueab:FilterX.FilterArgument>
                      <ueab:FilterX.Range>
                        <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                          <mca:CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">task_assignment_matrix.Sheet["Filtered"]</mca:CSharpValue>
                        </InArgument>
                      </ueab:FilterX.Range>
                    </ueab:FilterX>
                    <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="908,172" sap2010:WorkflowViewState.IdRef="ReadRangeX_1">
                      <ueab:ReadRangeX.Range>
                        <InArgument x:TypeArguments="ue:IReadRangeRef">
                          <mca:CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">task_assignment_matrix.Sheet["Filtered"]</mca:CSharpValue>
                        </InArgument>
                      </ueab:ReadRangeX.Range>
                      <ueab:ReadRangeX.SaveTo>
                        <OutArgument x:TypeArguments="sd:DataTable">
                          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">dt</mca:CSharpReference>
                        </OutArgument>
                      </ueab:ReadRangeX.SaveTo>
                    </ueab:ReadRangeX>
                    <Assign sap:VirtualizedContainerService.HintSize="908,62" sap2010:WorkflowViewState.IdRef="Assign_1">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">
                          <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">availability_rows</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">dt.Rows.Count.ToString()</mca:CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="908,62.6666666666667" sap2010:WorkflowViewState.IdRef="WriteLine_2">
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">"Number of available workers: " + availability_rows</mca:CSharpValue>
                      </InArgument>
                    </WriteLine>
                    <If sap:VirtualizedContainerService.HintSize="908,2872" sap2010:WorkflowViewState.IdRef="If_1">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">availability_rows != "0"</mca:CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="486,2711.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ueab:DeleteRowsX RowPositions="{x:Null}" DeleteRowsOption="Hidden" DisplayName="Delete Rows" HasHeaders="True" sap:VirtualizedContainerService.HintSize="444,140" sap2010:WorkflowViewState.IdRef="DeleteRowsX_1">
                            <ueab:DeleteRowsX.Range>
                              <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                                <mca:CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">task_assignment_matrix.Sheet["Filtered"]</mca:CSharpValue>
                              </InArgument>
                            </ueab:DeleteRowsX.Range>
                          </ueab:DeleteRowsX>
                          <ueab:SortX DisplayName="Sort by open tickets (asc)" HasHeaders="True" sap:VirtualizedContainerService.HintSize="444,214" sap2010:WorkflowViewState.IdRef="SortX_1">
                            <ueab:SortX.Body>
                              <ActivityAction>
                                <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_2">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ueab:SortColumnX ColumnName="Open" DisplayName="Sort By Column" sap:VirtualizedContainerService.HintSize="382,62.6666666666667" sap2010:WorkflowViewState.IdRef="SortColumnX_1" SortDirection="Ascending" />
                                </Sequence>
                              </ActivityAction>
                            </ueab:SortX.Body>
                            <ueab:SortX.Range>
                              <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                                <mca:CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">task_assignment_matrix.Sheet["Filtered"]</mca:CSharpValue>
                              </InArgument>
                            </ueab:SortX.Range>
                          </ueab:SortX>
                          <ueab:ReadCellValueX DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="444,162" sap2010:WorkflowViewState.IdRef="ReadCellValueX_1">
                            <ueab:ReadCellValueX.Cell>
                              <InArgument x:TypeArguments="ue:IReadCellRef">
                                <mca:CSharpValue x:TypeArguments="ue:IReadCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">task_assignment_matrix.Sheet["Filtered"].Cell["F2"]</mca:CSharpValue>
                              </InArgument>
                            </ueab:ReadCellValueX.Cell>
                            <ueab:ReadCellValueX.SaveTo>
                              <OutArgument x:TypeArguments="x:String">
                                <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">min_open_tickets</mca:CSharpReference>
                              </OutArgument>
                            </ueab:ReadCellValueX.SaveTo>
                          </ueab:ReadCellValueX>
                          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="444,62.6666666666667" sap2010:WorkflowViewState.IdRef="WriteLine_3">
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">"Min open tickets: " + min_open_tickets</mca:CSharpValue>
                            </InArgument>
                          </WriteLine>
                          <ueab:FilterX ClearFilter="False" ColumnName="Open" DisplayName="Filter by min open tickets" HasHeaders="True" sap:VirtualizedContainerService.HintSize="444,170.666666666667" sap2010:WorkflowViewState.IdRef="FilterX_3">
                            <ueab:FilterX.FilterArgument>
                              <ueabf:FilterArgument Mode="Basic">
                                <ueabf:FilterArgument.AdvancedFiltersArgument>
                                  <ueabf:AdvancedFilterArgument LogicalOperator="And">
                                    <ueabf:AdvancedFilterArgument.Condition1>
                                      <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                                    </ueabf:AdvancedFilterArgument.Condition1>
                                    <ueabf:AdvancedFilterArgument.Condition2>
                                      <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                                    </ueabf:AdvancedFilterArgument.Condition2>
                                  </ueabf:AdvancedFilterArgument>
                                </ueabf:FilterArgument.AdvancedFiltersArgument>
                                <ueabf:FilterArgument.BasicFiltersArgument>
                                  <ueabf:BasicFilterArgument>
                                    <ueabf:BasicFilterArgument.BasicFilters>
                                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                        <InArgument x:TypeArguments="x:String">
                                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">min_open_tickets</mca:CSharpValue>
                                        </InArgument>
                                      </scg:List>
                                    </ueabf:BasicFilterArgument.BasicFilters>
                                  </ueabf:BasicFilterArgument>
                                </ueabf:FilterArgument.BasicFiltersArgument>
                              </ueabf:FilterArgument>
                            </ueab:FilterX.FilterArgument>
                            <ueab:FilterX.Range>
                              <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                                <mca:CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">task_assignment_matrix.Sheet["Filtered"]</mca:CSharpValue>
                              </InArgument>
                            </ueab:FilterX.Range>
                          </ueab:FilterX>
                          <ueab:DeleteRowsX RowPositions="{x:Null}" DeleteRowsOption="Hidden" DisplayName="Delete Rows" HasHeaders="True" sap:VirtualizedContainerService.HintSize="444,140" sap2010:WorkflowViewState.IdRef="DeleteRowsX_2">
                            <ueab:DeleteRowsX.Range>
                              <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                                <mca:CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">task_assignment_matrix.Sheet["Filtered"]</mca:CSharpValue>
                              </InArgument>
                            </ueab:DeleteRowsX.Range>
                          </ueab:DeleteRowsX>
                          <ueab:SortX DisplayName="Sort by completed tickets" HasHeaders="True" sap:VirtualizedContainerService.HintSize="444,214" sap2010:WorkflowViewState.IdRef="SortX_2">
                            <ueab:SortX.Body>
                              <ActivityAction>
                                <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_3">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ueab:SortColumnX ColumnName="Completed" DisplayName="Sort By Column" sap:VirtualizedContainerService.HintSize="382,62.6666666666667" sap2010:WorkflowViewState.IdRef="SortColumnX_2" SortDirection="Ascending" />
                                </Sequence>
                              </ActivityAction>
                            </ueab:SortX.Body>
                            <ueab:SortX.Range>
                              <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                                <mca:CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">task_assignment_matrix.Sheet["Filtered"]</mca:CSharpValue>
                              </InArgument>
                            </ueab:SortX.Range>
                          </ueab:SortX>
                          <ueab:ReadCellValueX DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="444,162" sap2010:WorkflowViewState.IdRef="ReadCellValueX_2">
                            <ueab:ReadCellValueX.Cell>
                              <InArgument x:TypeArguments="ue:IReadCellRef">
                                <mca:CSharpValue x:TypeArguments="ue:IReadCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">task_assignment_matrix.Sheet["Filtered"].Cell["G2"]</mca:CSharpValue>
                              </InArgument>
                            </ueab:ReadCellValueX.Cell>
                            <ueab:ReadCellValueX.SaveTo>
                              <OutArgument x:TypeArguments="x:String">
                                <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">min_completed_tickets</mca:CSharpReference>
                              </OutArgument>
                            </ueab:ReadCellValueX.SaveTo>
                          </ueab:ReadCellValueX>
                          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="444,62.6666666666667" sap2010:WorkflowViewState.IdRef="WriteLine_4">
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">"Min completed tickets: " + min_completed_tickets</mca:CSharpValue>
                            </InArgument>
                          </WriteLine>
                          <ueab:FilterX ClearFilter="False" ColumnName="Completed" DisplayName="Filter by min completed tickets" HasHeaders="True" sap:VirtualizedContainerService.HintSize="444,170.666666666667" sap2010:WorkflowViewState.IdRef="FilterX_4">
                            <ueab:FilterX.FilterArgument>
                              <ueabf:FilterArgument Mode="Basic">
                                <ueabf:FilterArgument.AdvancedFiltersArgument>
                                  <ueabf:AdvancedFilterArgument LogicalOperator="And">
                                    <ueabf:AdvancedFilterArgument.Condition1>
                                      <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                                    </ueabf:AdvancedFilterArgument.Condition1>
                                    <ueabf:AdvancedFilterArgument.Condition2>
                                      <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                                    </ueabf:AdvancedFilterArgument.Condition2>
                                  </ueabf:AdvancedFilterArgument>
                                </ueabf:FilterArgument.AdvancedFiltersArgument>
                                <ueabf:FilterArgument.BasicFiltersArgument>
                                  <ueabf:BasicFilterArgument>
                                    <ueabf:BasicFilterArgument.BasicFilters>
                                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                        <InArgument x:TypeArguments="x:String">
                                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">min_completed_tickets</mca:CSharpValue>
                                        </InArgument>
                                      </scg:List>
                                    </ueabf:BasicFilterArgument.BasicFilters>
                                  </ueabf:BasicFilterArgument>
                                </ueabf:FilterArgument.BasicFiltersArgument>
                              </ueabf:FilterArgument>
                            </ueab:FilterX.FilterArgument>
                            <ueab:FilterX.Range>
                              <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                                <mca:CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">task_assignment_matrix.Sheet["Filtered"]</mca:CSharpValue>
                              </InArgument>
                            </ueab:FilterX.Range>
                          </ueab:FilterX>
                          <ueab:SortX DisplayName="Sort by worker (asc)" HasHeaders="True" sap:VirtualizedContainerService.HintSize="444,214" sap2010:WorkflowViewState.IdRef="SortX_3">
                            <ueab:SortX.Body>
                              <ActivityAction>
                                <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_4">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ueab:SortColumnX ColumnName="Person ID" DisplayName="Sort By Column" sap:VirtualizedContainerService.HintSize="382,62.6666666666667" sap2010:WorkflowViewState.IdRef="SortColumnX_3" SortDirection="Ascending" />
                                </Sequence>
                              </ActivityAction>
                            </ueab:SortX.Body>
                            <ueab:SortX.Range>
                              <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                                <mca:CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">task_assignment_matrix.Sheet["Filtered"]</mca:CSharpValue>
                              </InArgument>
                            </ueab:SortX.Range>
                          </ueab:SortX>
                          <ueab:ReadCellValueX DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="444,162" sap2010:WorkflowViewState.IdRef="ReadCellValueX_3">
                            <ueab:ReadCellValueX.Cell>
                              <InArgument x:TypeArguments="ue:IReadCellRef">
                                <mca:CSharpValue x:TypeArguments="ue:IReadCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">task_assignment_matrix.Sheet["Filtered"].Cell["A2"]</mca:CSharpValue>
                              </InArgument>
                            </ueab:ReadCellValueX.Cell>
                            <ueab:ReadCellValueX.SaveTo>
                              <OutArgument x:TypeArguments="x:String">
                                <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">assigned_worker_id</mca:CSharpReference>
                              </OutArgument>
                            </ueab:ReadCellValueX.SaveTo>
                          </ueab:ReadCellValueX>
                          <ueab:ReadCellValueX DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="444,162" sap2010:WorkflowViewState.IdRef="ReadCellValueX_4">
                            <ueab:ReadCellValueX.Cell>
                              <InArgument x:TypeArguments="ue:IReadCellRef">
                                <mca:CSharpValue x:TypeArguments="ue:IReadCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">task_assignment_matrix.Sheet["Filtered"].Cell["C2"]</mca:CSharpValue>
                              </InArgument>
                            </ueab:ReadCellValueX.Cell>
                            <ueab:ReadCellValueX.SaveTo>
                              <OutArgument x:TypeArguments="x:String">
                                <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">assigned_worker_name</mca:CSharpReference>
                              </OutArgument>
                            </ueab:ReadCellValueX.SaveTo>
                          </ueab:ReadCellValueX>
                          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="444,62.6666666666667" sap2010:WorkflowViewState.IdRef="WriteLine_5">
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">"Assigned worker: " + assigned_worker_name</mca:CSharpValue>
                            </InArgument>
                          </WriteLine>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="376,279.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_6">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,85.3333333333333" sap2010:WorkflowViewState.IdRef="MessageBox_1">
                            <ui:MessageBox.Text>
                              <InArgument x:TypeArguments="x:Object">
                                <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">"No worker available!"</mca:CSharpValue>
                              </InArgument>
                            </ui:MessageBox.Text>
                          </ui:MessageBox>
                          <Assign DisplayName="Assign default worker" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_2">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">
                                <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">assigned_worker_id</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">227711</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Else>
                    </If>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="908,62.6666666666667" sap2010:WorkflowViewState.IdRef="WriteLine_6">
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">"Assigned worker id: " + assigned_worker_id</mca:CSharpValue>
                      </InArgument>
                    </WriteLine>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
            </ueab:ExcelApplicationCard>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelProcessScopeX.Body>
    </ueab:ExcelProcessScopeX>
  </Sequence>
</Activity>